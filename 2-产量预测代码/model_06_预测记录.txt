C:\Users\Administrator\AppData\Local\Programs\Python\Python310\python.exe "C:\Users\Administrator\Desktop\2. B774模型脚本\2-适宜度产量预测模型\3-模型训练+预测\预测备份.py"
✅ CUDA 11.8环境变量已存在
TensorFlow版本: 2.10.1
CUDA是否可用: True
检测到的GPU数量: 1
GPU 0 设备名称: /physical_device:GPU:0
Windows下TensorFlow官方不支持多GPU NCCL通信，自动切换为单卡训练。
已启用GPU内存增长，仅使用GPU: /physical_device:GPU:0
多GPU训练环境设置成功，将使用 1 个GPU进行训练
=== 脚本已启动 ===
=== 产量预测程序 ===
使用现有模型对预测气象数据进行产量预测
数据源: 预测气象数据 + 土壤数据
==================================================

🔍 检测可用模型...
🔍 检测到 2 个可用模型:
   1. maize
   2. model_test
=== 进入预测流程 ===
🎯 使用默认模型: model_test_06

1. 验证配置...
参数验证通过
路径验证通过

2. 检查现有模型...
✅ 找到现有模型: C:\Users\Administrator\Desktop\2. B774模型脚本\2-适宜度产量预测模型\model_test_06\final_modelAA\final_model_r2_r2_0.9196.h5

3. 分析模型特征映射关系...
🔍 模型特征映射分析完成:
   特征顺序类型: named
   映射策略: direct_match
   Scaler特征数量: 26

4. 加载和预处理预测数据...
加载预测气象数据...
从文件夹读取气象数据: C:\Users\Administrator\Desktop\2. B774模型脚本\2-适宜度产量预测模型\train+text_csv数据\预测气象
找到 1 个CSV文件: ['test_weather_2014.csv']
使用行数范围读取: 起始行=0, 结束行=50000
正在读取文件: test_weather_2014.csv
读取气象数据文件:   0%|          | 0/1 [00:00<?, ?it/s]  文件总行数: 2,905,129
  读取范围: 第1行到第50000行 (共50,000行)
  ✅ 成功读取: 50,000 行 × 15 列
合并气象数据文件...
合并后的气象数据形状: (50000, 15)
合并后的气象数据列: ['Lon', 'Lat', 'altitude', 'YYYY', 'MM', 'Tsun_mean', 'TAVE_mean', 'Tmax_mean', 'Tmin_mean', 'Rain_mean', 'GTAVE_mean', 'GTmax_mean', 'GTmin_mean', 'Sevp_mean', 'source_file']
各文件数据量统计:
source_file
test_weather_2014.csv    50000
Name: count, dtype: int64
使用全部气象数据: 50,000 行
预测气象数据形状: (50000, 14)
读取气象数据文件: 100%|██████████| 1/1 [00:01<00:00,  1.23s/it]
土壤数据形状: (140673, 10)
重命名气象数据列名...
重命名后气象数据列名: ['x', 'y', 'altitude', 'yyyy', 'MM', 'Tsun_mean', 'TAVE_mean', 'Tmax_mean', 'Tmin_mean', 'Rain_mean']...
添加前缀后气象数据列名: ['right_x', 'right_y', 'right_altitude', 'right_yyyy', 'right_MM', 'right_Tsun_mean', 'right_TAVE_mean', 'right_Tmax_mean', 'right_Tmin_mean', 'right_Rain_mean']...
虚拟产品数据形状: (140673, 3)
虚拟产品数据列名: ['x', 'y', 'yyyy']
精确键合并结果为空，回退到空间近邻合并...
处理年份: [2014]
气象数据可用年份: [2014]
年份完全匹配的年份: [2014]
处理年份 2014 (1/1)...
  使用相同年份 2014 的气象数据
  左表: 140673 行, 右表: 50000 行
  合并成功: 140673 行
检查并处理重复列名...
重命名重复列: right_x -> right_x_1
重命名重复列: right_y -> right_y_1
添加 right_x_original 列
添加 right_y_original 列
最终预测数据形状: (140673, 29)

5. 加载现有模型和预处理器...
2025-10-14 18:51:13.965776: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-10-14 18:51:14.197955: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1616] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 21458 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 4090, pci bus id: 0000:00:03.0, compute capability: 8.9
成功加载模型: C:\Users\Administrator\Desktop\2. B774模型脚本\2-适宜度产量预测模型\model_test_06\final_modelAA\final_model_r2_r2_0.9196.h5

🔍 确定模型期望特征数量...
⚠️ 未找到模型信息文件
从模型输入层检测到特征数量: 88
✅ 自动检测到特征数量: 88
✅ 模型信息文件已保存: C:\Users\Administrator\Desktop\2. B774模型脚本\2-适宜度产量预测模型\model_test_06\final_modelAA\model_info.json
🔍 检测模型特征格式...
   原始特征顺序文件中的格式: ['1', '36', '7', '21', '2', '5', '0', '6', '13', '15', '4', '12', '3', '8', '41', '11', '32', '19', '20', '10', '9', '14', '25', '18', '17', '40', '22', '37', '26', '44', '16', '23', '24', '43', '35', '28', '27', '31', '30', '48', '38', '33', '45', '34', '46', 'pca_0', 'right_y_original', '29', '49', '42']
   包含数字索引: True
   包含特征名称: True
   预测数据包含原始特征名: True
🔧 需要特征适配: True
✅ 检测到需要进行特征适配的模型

6. 数据预处理...
预处理预测数据...
数据总量: 140,673 行
数据量过大，使用分块处理（块大小: 100,000 行）
开始分块预处理，块大小: 100,000 行
处理块 1/2: 行 0 - 100,000
🔧 检测到特征名称不匹配，进行智能转换...
🔧 智能特征转换:
   输入特征: ['yyyy', 'right_x', 'right_y', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_1', 'right_y_1', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd', 'right_x_original', 'right_y_original']
   期望特征: ['1', '36', '7', '21', '2', '5', '0', '6', '13', '15', '4', '12', '3', '8', '41', '11', '32', '19', '20', '10', '9', '14', '25', '18', '17', '40', '22', '37', '26', '44', '16', '23', '24', '43', '35', '28', '27', '31', '30', '48', '38', '33', '45', '34', '46', 'right_y_original', '29', '49', '42']
   Scaler期望特征名: ['x_product', 'y_product', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_original', 'right_y_original', 'right_x', 'right_y', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd']
   预测数据原始特征: ['yyyy', 'right_x', 'right_y', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_1', 'right_y_1', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd', 'right_x_original', 'right_y_original']
   ❌ 缺失映射: x_product = 0
   ❌ 缺失映射: y_product = 0
   ✅ 直接映射: right_altitude
   ✅ 直接映射: right_yyyy
   ✅ 直接映射: right_mm
   ✅ 直接映射: right_tsun_mean
   ✅ 直接映射: right_tave_mean
   ✅ 直接映射: right_tmax_mean
   ✅ 直接映射: right_tmin_mean
   ✅ 直接映射: right_rain_mean
   ✅ 直接映射: right_gtave_mean
   ✅ 直接映射: right_gtmax_mean
   ✅ 直接映射: right_gtmin_mean
   ✅ 直接映射: right_sevp_mean
   ✅ 直接映射: right_x_original
   ✅ 直接映射: right_y_original
   ✅ 直接映射: right_x
   ✅ 直接映射: right_y
   ✅ 直接映射: right_tz
   ✅ 直接映射: right_cec
   ✅ 直接映射: right_ph
   ✅ 直接映射: right_soc
   ✅ 直接映射: right_socd
   ✅ 直接映射: right_tk
   ✅ 直接映射: right_tnd
   ✅ 直接映射: right_tpd
🔧 转换完成，特征数: 26
🔧 转换后的特征名称: ['x_product', 'y_product', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_original', 'right_y_original', 'right_x', 'right_y', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd']
应用PCA变换...
🔍 PCA期望特征数量: 26
🔍 PCA期望特征名称: ['x_product' 'y_product' 'right_altitude' 'right_yyyy' 'right_mm'
 'right_tsun_mean' 'right_tave_mean' 'right_tmax_mean' 'right_tmin_mean'
 'right_rain_mean' 'right_gtave_mean' 'right_gtmax_mean'
 'right_gtmin_mean' 'right_sevp_mean' 'right_x_original'
 'right_y_original' 'right_x' 'right_y' 'right_tz' 'right_cec' 'right_ph'
 'right_soc' 'right_socd' 'right_tk' 'right_tnd' 'right_tpd']
🔍 输入数据特征名称: ['x_product', 'y_product', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_original', 'right_y_original', 'right_x', 'right_y', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd']
🔧 PCA输入特征数量: 26
🔧 PCA输入特征名称: ['x_product', 'y_product', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_original', 'right_y_original', 'right_x', 'right_y', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd']
添加 24 个零特征以匹配XGBoost模型...
XGBoost特征提取失败: data did not contain feature names, but the following fields are expected: x_product, y_product, right_altitude, right_yyyy, right_mm, right_tsun_mean, right_tave_mean, right_tmax_mean, right_tmin_mean, right_rain_mean, right_gtave_mean, right_gtmax_mean, right_gtmin_mean, right_sevp_mean, right_x_original, right_y_original, right_x, right_y, right_tz, right_cec, right_ph, right_soc, right_socd, right_tk, right_tnd, right_tpd, pca_0, pca_1, pca_2, pca_3, pca_4, pca_5, pca_6, pca_7, pca_8, pca_9, pca_10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
使用原始特征作为备选...
添加 1 个零特征以达到88个特征...
调整后最终特征数量: 88
处理块 2/2: 行 100,000 - 140,673
🔧 检测到特征名称不匹配，进行智能转换...
🔧 智能特征转换:
   输入特征: ['yyyy', 'right_x', 'right_y', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_1', 'right_y_1', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd', 'right_x_original', 'right_y_original']
   期望特征: ['1', '36', '7', '21', '2', '5', '0', '6', '13', '15', '4', '12', '3', '8', '41', '11', '32', '19', '20', '10', '9', '14', '25', '18', '17', '40', '22', '37', '26', '44', '16', '23', '24', '43', '35', '28', '27', '31', '30', '48', '38', '33', '45', '34', '46', 'right_y_original', '29', '49', '42']
   Scaler期望特征名: ['x_product', 'y_product', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_original', 'right_y_original', 'right_x', 'right_y', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd']
   预测数据原始特征: ['yyyy', 'right_x', 'right_y', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_1', 'right_y_1', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd', 'right_x_original', 'right_y_original']
   ❌ 缺失映射: x_product = 0
   ❌ 缺失映射: y_product = 0
   ✅ 直接映射: right_altitude
   ✅ 直接映射: right_yyyy
   ✅ 直接映射: right_mm
   ✅ 直接映射: right_tsun_mean
   ✅ 直接映射: right_tave_mean
   ✅ 直接映射: right_tmax_mean
   ✅ 直接映射: right_tmin_mean
   ✅ 直接映射: right_rain_mean
   ✅ 直接映射: right_gtave_mean
   ✅ 直接映射: right_gtmax_mean
   ✅ 直接映射: right_gtmin_mean
   ✅ 直接映射: right_sevp_mean
   ✅ 直接映射: right_x_original
   ✅ 直接映射: right_y_original
   ✅ 直接映射: right_x
   ✅ 直接映射: right_y
   ✅ 直接映射: right_tz
   ✅ 直接映射: right_cec
   ✅ 直接映射: right_ph
   ✅ 直接映射: right_soc
   ✅ 直接映射: right_socd
   ✅ 直接映射: right_tk
   ✅ 直接映射: right_tnd
   ✅ 直接映射: right_tpd
🔧 转换完成，特征数: 26
🔧 转换后的特征名称: ['x_product', 'y_product', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_original', 'right_y_original', 'right_x', 'right_y', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd']
应用PCA变换...
🔍 PCA期望特征数量: 26
🔍 PCA期望特征名称: ['x_product' 'y_product' 'right_altitude' 'right_yyyy' 'right_mm'
 'right_tsun_mean' 'right_tave_mean' 'right_tmax_mean' 'right_tmin_mean'
 'right_rain_mean' 'right_gtave_mean' 'right_gtmax_mean'
 'right_gtmin_mean' 'right_sevp_mean' 'right_x_original'
 'right_y_original' 'right_x' 'right_y' 'right_tz' 'right_cec' 'right_ph'
 'right_soc' 'right_socd' 'right_tk' 'right_tnd' 'right_tpd']
🔍 输入数据特征名称: ['x_product', 'y_product', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_original', 'right_y_original', 'right_x', 'right_y', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd']
🔧 PCA输入特征数量: 26
🔧 PCA输入特征名称: ['x_product', 'y_product', 'right_altitude', 'right_yyyy', 'right_mm', 'right_tsun_mean', 'right_tave_mean', 'right_tmax_mean', 'right_tmin_mean', 'right_rain_mean', 'right_gtave_mean', 'right_gtmax_mean', 'right_gtmin_mean', 'right_sevp_mean', 'right_x_original', 'right_y_original', 'right_x', 'right_y', 'right_tz', 'right_cec', 'right_ph', 'right_soc', 'right_socd', 'right_tk', 'right_tnd', 'right_tpd']
添加 24 个零特征以匹配XGBoost模型...
XGBoost特征提取失败: data did not contain feature names, but the following fields are expected: x_product, y_product, right_altitude, right_yyyy, right_mm, right_tsun_mean, right_tave_mean, right_tmax_mean, right_tmin_mean, right_rain_mean, right_gtave_mean, right_gtmax_mean, right_gtmin_mean, right_sevp_mean, right_x_original, right_y_original, right_x, right_y, right_tz, right_cec, right_ph, right_soc, right_socd, right_tk, right_tnd, right_tpd, pca_0, pca_1, pca_2, pca_3, pca_4, pca_5, pca_6, pca_7, pca_8, pca_9, pca_10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
使用原始特征作为备选...
添加 1 个零特征以达到88个特征...
调整后最终特征数量: 88
合并所有处理后的块...
分块预处理完成，最终特征数量: 88

8. 执行模型预测...
执行模型预测...
数据总量: 140,673 行，分 1 批处理
保存块大小: 5,000,000 行
将保存 1 个预测结果文件
处理批次: 行 0 - 140,673
批次数据形状: (140673, 88)
批次数据类型: <class 'pandas.core.frame.DataFrame'>
批次数据前5行前5列:
   x_product  y_product  right_altitude  right_yyyy  right_mm
0   0.029159  -0.141889             1.5         1.5       1.0
1   0.029159  -0.141889             1.5         1.5       1.0
2   0.029159  -0.141889             1.5         1.5       1.0
3   0.029159  -0.141889             1.5         1.5       1.0
4   0.029159  -0.141889             1.5         1.5       1.0
数据范围检查:
  最小值: -2.8396603873570103
  最大值: 3.6192796802348175
  是否有无穷值: False
  是否有NaN值: False
处理后数据范围: [-1.500000, 1.500000]
模型输入形状期望: (None, 88)
实际输入形状: (140673, 88)
2025-10-14 18:51:17.442701: I tensorflow/stream_executor/cuda/cuda_blas.cc:1614] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.
4397/4397 [==============================] - 71s 16ms/step
预测结果类型: <class 'list'>
预测结果数量: 2
分类预测形状: (140673, 1)
回归预测形状: (140673, 2)
✅ 已保存预测结果文件 1: prediction_results_chunk_001_20251014_185232.csv
   文件包含: 140,673 行数据
   per_mu范围: 70.64 - 75.73
   文件路径: C:\Users\Administrator\Desktop\2. B774模型脚本\2-适宜度产量预测模型\model_test_06\result_predited_csvAA\prediction_results_chunk_001_20251014_185232.csv

9. 预测完成统计...

✅ 预测完成！
共保存了 1 个预测结果文件:

🎉 预测程序执行成功！

进程已结束，退出代码为 0
